---
/** Paged list of articles with paging controls and optional heading
 * Takes EITHER:
 * - A paged list in the [paginate() format](https://docs.astro.build/en/reference/api-reference/#paginate)
 * - or a non-paged list, e.g. direct or indirect from getAllArticles()
 * 
 * TODO
 * - Allow for frontmatter image
 */

// import siteInfo from '@/site-info.json';
import ArticleMeta from '@/components/utils/ArticleMeta.astro';
import ArticlesListNav from '@/components/utils/ArticlesListNav.astro'

/**
 * @typedef {Object} Props
 * @property {CollectionEntry=} articles - The collection entry array
 * @property {CollectionEntry=} page - Paginated collection entries
 * @property {Array<Page>=} page.data - Array of Page entries from the paginated collection data
 * @property {string=} label - The number to display.
 * @property {string=} LabelTag - The HTML tag to use to display the label. Defaults to 'div'
 * @property {boolean=} showName If true, show the article list navigation bar
 */

/** @type {Props} */
let { articles = null, page = null, label = '', LabelTag = 'div', showNav = true } = Astro.props

// Articles list either comes from page.data (for paginated results) or from articles AKA posts (for non-paginated results)
const allArticles = page?.data ?? articles ?? []

// console.log('[src/components/ArticlesList.astro] Astro.props', Astro.props)
// console.log('[src/components/ArticlesList.astro] page.data', page.data)
// console.log('[src/components/ArticlesList.astro] articles', articles)
// console.log('[src/components/ArticlesList.astro] allArticles', allArticles)

---
<div data-component="ArticlesList">
    { label ? <LabelTag>{label}</LabelTag> : ''}
    { allArticles.length < 1 ? <p>No articles found.</p> : '' }
    <ul>
        {allArticles.map(post => {
            return (
                <li><article>
                    <h3>
                        <a href={`${post.data.path}`}>{post.data.title}</a>
                    </h3>
                    <ArticleMeta frontmatter={post.data} />
                </article></li>
            )
        })}
    </ul>
    {showNav && page ? <ArticlesListNav page={page} /> : ''}
</div>

<style>
    ul {
        list-style: none;
        margin-block-start: 0;
        padding-inline-start: 0;
    }
</style>
